// Code generated by protoc-gen-go. DO NOT EDIT.
// source: listing/analytics.proto

package listing_proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PriceRevisionEvent_Source int32

const (
	PriceRevisionEvent_SOURCE_UNKNOWN                   PriceRevisionEvent_Source = 0
	PriceRevisionEvent_SOURCE_LISTING_DETAILS_PAGE      PriceRevisionEvent_Source = 1
	PriceRevisionEvent_SOURCE_CONFIRM_AVAILABILITY_CHAT PriceRevisionEvent_Source = 2
)

var PriceRevisionEvent_Source_name = map[int32]string{
	0: "SOURCE_UNKNOWN",
	1: "SOURCE_LISTING_DETAILS_PAGE",
	2: "SOURCE_CONFIRM_AVAILABILITY_CHAT",
}

var PriceRevisionEvent_Source_value = map[string]int32{
	"SOURCE_UNKNOWN":                   0,
	"SOURCE_LISTING_DETAILS_PAGE":      1,
	"SOURCE_CONFIRM_AVAILABILITY_CHAT": 2,
}

func (x PriceRevisionEvent_Source) String() string {
	return proto.EnumName(PriceRevisionEvent_Source_name, int32(x))
}

func (PriceRevisionEvent_Source) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_61d797fa304c1ae0, []int{1, 0}
}

type StrikeThroughPriceEvent struct {
	LegacyListingId      string               `protobuf:"bytes,1,opt,name=legacy_listing_id,json=legacyListingId,proto3" json:"legacy_listing_id,omitempty"`
	UserId               string               `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Platform             string               `protobuf:"bytes,3,opt,name=platform,proto3" json:"platform,omitempty"`
	BuildNo              string               `protobuf:"bytes,4,opt,name=build_no,json=buildNo,proto3" json:"build_no,omitempty"`
	TimeUpdated          *timestamp.Timestamp `protobuf:"bytes,5,opt,name=time_updated,json=timeUpdated,proto3" json:"time_updated,omitempty"`
	IsEnabled            bool                 `protobuf:"varint,6,opt,name=is_enabled,json=isEnabled,proto3" json:"is_enabled,omitempty"`
	OldPrice             float64              `protobuf:"fixed64,7,opt,name=old_price,json=oldPrice,proto3" json:"old_price,omitempty"`
	NewPrice             float64              `protobuf:"fixed64,8,opt,name=new_price,json=newPrice,proto3" json:"new_price,omitempty"`
	Source               string               `protobuf:"bytes,9,opt,name=source,proto3" json:"source,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *StrikeThroughPriceEvent) Reset()         { *m = StrikeThroughPriceEvent{} }
func (m *StrikeThroughPriceEvent) String() string { return proto.CompactTextString(m) }
func (*StrikeThroughPriceEvent) ProtoMessage()    {}
func (*StrikeThroughPriceEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_61d797fa304c1ae0, []int{0}
}

func (m *StrikeThroughPriceEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StrikeThroughPriceEvent.Unmarshal(m, b)
}
func (m *StrikeThroughPriceEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StrikeThroughPriceEvent.Marshal(b, m, deterministic)
}
func (m *StrikeThroughPriceEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StrikeThroughPriceEvent.Merge(m, src)
}
func (m *StrikeThroughPriceEvent) XXX_Size() int {
	return xxx_messageInfo_StrikeThroughPriceEvent.Size(m)
}
func (m *StrikeThroughPriceEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_StrikeThroughPriceEvent.DiscardUnknown(m)
}

var xxx_messageInfo_StrikeThroughPriceEvent proto.InternalMessageInfo

func (m *StrikeThroughPriceEvent) GetLegacyListingId() string {
	if m != nil {
		return m.LegacyListingId
	}
	return ""
}

func (m *StrikeThroughPriceEvent) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *StrikeThroughPriceEvent) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *StrikeThroughPriceEvent) GetBuildNo() string {
	if m != nil {
		return m.BuildNo
	}
	return ""
}

func (m *StrikeThroughPriceEvent) GetTimeUpdated() *timestamp.Timestamp {
	if m != nil {
		return m.TimeUpdated
	}
	return nil
}

func (m *StrikeThroughPriceEvent) GetIsEnabled() bool {
	if m != nil {
		return m.IsEnabled
	}
	return false
}

func (m *StrikeThroughPriceEvent) GetOldPrice() float64 {
	if m != nil {
		return m.OldPrice
	}
	return 0
}

func (m *StrikeThroughPriceEvent) GetNewPrice() float64 {
	if m != nil {
		return m.NewPrice
	}
	return 0
}

func (m *StrikeThroughPriceEvent) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

type PriceRevisionEvent struct {
	Data                 *GetPriceRevisionDataResponse `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Timestamp            *timestamp.Timestamp          `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	JourneyId            string                        `protobuf:"bytes,3,opt,name=journey_id,json=journeyId,proto3" json:"journey_id,omitempty"`
	Source               PriceRevisionEvent_Source     `protobuf:"varint,4,opt,name=source,proto3,enum=listing_proto.PriceRevisionEvent_Source" json:"source,omitempty"`
	IsHighAccuracy       bool                          `protobuf:"varint,5,opt,name=is_high_accuracy,json=isHighAccuracy,proto3" json:"is_high_accuracy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *PriceRevisionEvent) Reset()         { *m = PriceRevisionEvent{} }
func (m *PriceRevisionEvent) String() string { return proto.CompactTextString(m) }
func (*PriceRevisionEvent) ProtoMessage()    {}
func (*PriceRevisionEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_61d797fa304c1ae0, []int{1}
}

func (m *PriceRevisionEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PriceRevisionEvent.Unmarshal(m, b)
}
func (m *PriceRevisionEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PriceRevisionEvent.Marshal(b, m, deterministic)
}
func (m *PriceRevisionEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PriceRevisionEvent.Merge(m, src)
}
func (m *PriceRevisionEvent) XXX_Size() int {
	return xxx_messageInfo_PriceRevisionEvent.Size(m)
}
func (m *PriceRevisionEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_PriceRevisionEvent.DiscardUnknown(m)
}

var xxx_messageInfo_PriceRevisionEvent proto.InternalMessageInfo

func (m *PriceRevisionEvent) GetData() *GetPriceRevisionDataResponse {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *PriceRevisionEvent) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *PriceRevisionEvent) GetJourneyId() string {
	if m != nil {
		return m.JourneyId
	}
	return ""
}

func (m *PriceRevisionEvent) GetSource() PriceRevisionEvent_Source {
	if m != nil {
		return m.Source
	}
	return PriceRevisionEvent_SOURCE_UNKNOWN
}

func (m *PriceRevisionEvent) GetIsHighAccuracy() bool {
	if m != nil {
		return m.IsHighAccuracy
	}
	return false
}

func init() {
	proto.RegisterEnum("listing_proto.PriceRevisionEvent_Source", PriceRevisionEvent_Source_name, PriceRevisionEvent_Source_value)
	proto.RegisterType((*StrikeThroughPriceEvent)(nil), "listing_proto.StrikeThroughPriceEvent")
	proto.RegisterType((*PriceRevisionEvent)(nil), "listing_proto.PriceRevisionEvent")
}

func init() { proto.RegisterFile("listing/analytics.proto", fileDescriptor_61d797fa304c1ae0) }

var fileDescriptor_61d797fa304c1ae0 = []byte{
	// 548 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x93, 0x51, 0x6f, 0xd3, 0x3c,
	0x18, 0x85, 0xbf, 0xf4, 0x1b, 0x5d, 0xe2, 0xc1, 0x28, 0x96, 0x60, 0xa1, 0x13, 0x5a, 0x35, 0x71,
	0x11, 0x81, 0x48, 0xa4, 0x71, 0x83, 0x84, 0x80, 0x65, 0x5b, 0xe9, 0x22, 0x4a, 0x3a, 0xa5, 0x29,
	0x08, 0x6e, 0x2c, 0x37, 0xf6, 0x12, 0x43, 0x1a, 0x47, 0xb1, 0xb3, 0xa9, 0x3f, 0x90, 0xdf, 0x05,
	0x8a, 0x9d, 0x14, 0x15, 0x24, 0xae, 0xac, 0xf7, 0x9c, 0xe3, 0x24, 0xcf, 0x79, 0x15, 0x70, 0x90,
	0x33, 0x21, 0x59, 0x91, 0x7a, 0xb8, 0xc0, 0xf9, 0x5a, 0xb2, 0x44, 0xb8, 0x65, 0xc5, 0x25, 0x87,
	0xf7, 0x5a, 0x03, 0xa9, 0x71, 0x78, 0x94, 0x72, 0x9e, 0xe6, 0xd4, 0x53, 0xd3, 0xb2, 0xbe, 0xf6,
	0x24, 0x5b, 0x51, 0x21, 0xf1, 0xaa, 0xd4, 0xf9, 0xe1, 0xc3, 0xee, 0x41, 0xed, 0xa9, 0xe5, 0xe3,
	0x1f, 0x3d, 0x70, 0x30, 0x97, 0x15, 0xfb, 0x4e, 0xe3, 0xac, 0xe2, 0x75, 0x9a, 0x5d, 0x55, 0x2c,
	0xa1, 0xe3, 0x1b, 0x5a, 0x48, 0xf8, 0x0c, 0x3c, 0xc8, 0x69, 0x8a, 0x93, 0x35, 0xea, 0xde, 0xc5,
	0x88, 0x6d, 0x8c, 0x0c, 0xc7, 0x8a, 0xee, 0x6b, 0x63, 0xaa, 0xf5, 0x80, 0xc0, 0x03, 0xb0, 0x5b,
	0x0b, 0x5a, 0x35, 0x89, 0x9e, 0x4a, 0xf4, 0x9b, 0x31, 0x20, 0x70, 0x08, 0xcc, 0x32, 0xc7, 0xf2,
	0x9a, 0x57, 0x2b, 0xfb, 0x7f, 0xe5, 0x6c, 0x66, 0xf8, 0x18, 0x98, 0xcb, 0x9a, 0xe5, 0x04, 0x15,
	0xdc, 0xde, 0x51, 0xde, 0xae, 0x9a, 0x43, 0x0e, 0xdf, 0x80, 0xbb, 0x0d, 0x01, 0xaa, 0x4b, 0x82,
	0x25, 0x25, 0xf6, 0x9d, 0x91, 0xe1, 0xec, 0x9d, 0x0c, 0x5d, 0x8d, 0xe9, 0x76, 0x98, 0x6e, 0xdc,
	0x61, 0x46, 0x7b, 0x4d, 0x7e, 0xa1, 0xe3, 0xf0, 0x09, 0x00, 0x4c, 0x20, 0x5a, 0xe0, 0x65, 0x4e,
	0x89, 0xdd, 0x1f, 0x19, 0x8e, 0x19, 0x59, 0x4c, 0x8c, 0xb5, 0x00, 0x0f, 0x81, 0xc5, 0x73, 0x82,
	0xca, 0x86, 0xd5, 0xde, 0x1d, 0x19, 0x8e, 0x11, 0x99, 0x3c, 0x27, 0x8a, 0xbd, 0x31, 0x0b, 0x7a,
	0xdb, 0x9a, 0xa6, 0x36, 0x0b, 0x7a, 0xab, 0xcd, 0x47, 0xa0, 0x2f, 0x78, 0x5d, 0x25, 0xd4, 0xb6,
	0x34, 0xa6, 0x9e, 0x8e, 0x7f, 0xf6, 0x00, 0x54, 0x89, 0x88, 0xde, 0x30, 0xc1, 0x78, 0xa1, 0x2b,
	0x7c, 0x07, 0x76, 0x08, 0x96, 0x58, 0xb5, 0xb6, 0x77, 0xf2, 0xdc, 0xdd, 0x5a, 0x9a, 0x3b, 0xa1,
	0x72, 0xeb, 0xce, 0x05, 0x96, 0x38, 0xa2, 0xa2, 0xe4, 0x85, 0xa0, 0x91, 0xba, 0x08, 0x5f, 0x01,
	0x6b, 0xb3, 0x49, 0xd5, 0xec, 0xbf, 0x4b, 0xf8, 0x1d, 0x6e, 0x2a, 0xf8, 0xc6, 0xeb, 0xaa, 0xa0,
	0xeb, 0x66, 0x29, 0xba, 0x7a, 0xab, 0x55, 0x02, 0x02, 0x4f, 0x37, 0x20, 0x4d, 0xf3, 0xfb, 0x27,
	0xce, 0x1f, 0xdf, 0xf6, 0x37, 0x8c, 0x3b, 0x57, 0xf9, 0x0e, 0x19, 0x3a, 0x60, 0xc0, 0x04, 0xca,
	0x58, 0x9a, 0x21, 0x9c, 0x24, 0x75, 0x85, 0x93, 0xb5, 0x5a, 0x93, 0x19, 0xed, 0x33, 0x71, 0xc9,
	0xd2, 0xcc, 0x6f, 0xd5, 0xe3, 0x04, 0xf4, 0xf5, 0x5d, 0x08, 0xc1, 0xfe, 0x7c, 0xb6, 0x88, 0xce,
	0xc7, 0x68, 0x11, 0x7e, 0x08, 0x67, 0x9f, 0xc3, 0xc1, 0x7f, 0xf0, 0x08, 0x1c, 0xb6, 0xda, 0x34,
	0x98, 0xc7, 0x41, 0x38, 0x41, 0x17, 0xe3, 0xd8, 0x0f, 0xa6, 0x73, 0x74, 0xe5, 0x4f, 0xc6, 0x03,
	0x03, 0x3e, 0x05, 0xa3, 0x36, 0x70, 0x3e, 0x0b, 0xdf, 0x07, 0xd1, 0x47, 0xe4, 0x7f, 0xf2, 0x83,
	0xa9, 0x7f, 0x16, 0x4c, 0x83, 0xf8, 0x0b, 0x3a, 0xbf, 0xf4, 0xe3, 0x41, 0xef, 0xec, 0xf4, 0xeb,
	0xdb, 0x94, 0xc9, 0xac, 0x5e, 0xba, 0x09, 0x5f, 0x79, 0x09, 0xae, 0x78, 0x2d, 0x68, 0x9e, 0x7b,
	0x22, 0xc3, 0x15, 0x25, 0x2f, 0x14, 0x95, 0x97, 0xd2, 0xc2, 0x4b, 0x79, 0xf7, 0x0f, 0xbc, 0xde,
	0x42, 0x5e, 0xf6, 0xd5, 0xf1, 0xf2, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa8, 0x42, 0xc6, 0x56,
	0x74, 0x03, 0x00, 0x00,
}
